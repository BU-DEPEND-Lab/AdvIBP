{
    "network_model": "network.py",
    "dataset": "mnist",
    "load_pretrain": true,
    "models_path": "../../trained_IBP_models/mnist/mnist_small_02_04",
    "training_params": {
        "method": "robust",
        "epochs": 250,
        "lr": 0.000125,
        "lr_decay_factor": 0.25,
        "lr_decay_step": null,
        "lr_decay_milestones": [0, 50, 100, 200],
        "lr_decay_milestones_post_layer": [50, 100, 200],
        "weight_decay": 0.0,
        "optimizer": "adam",
        "starting_epsilon": 0.0,
        "epsilon": 0.4,
        "schedule_start": 10,
        "schedule_length": 40,
        "schedule_type": "smoothed",
        "norm": "inf",
        "verbose": false,
        "multi_gpu": false,
        "warm_up": {"schedule_start": 0, "schedule_length": 50, "schedule_type": "smoothed"},
        "inner_max_eval": {"schedule_start": 10, "schedule_length": 50, "schedule_type": "linear", "c_max": 1e-4, "c_min": 1e-6},
        "loader_params": {"batch_size": 256, "test_batch_size": 256, "shuffle_train": true},
        "method_params": {"bounded_input": true, "bound_type": "interval", "batch_multiplier": 1, "adversarial_training": true, "eval": true}
    },
    "attack_params": {
        "epsilon": 0.4,
        "attack_steps": 1,
        "attack_stepsize": 0.03,
        "random_start": true,
        "loss_func": "ce"
    },
    "eval_params": {
        "epsilon": 0.2,
        "attack_steps": 1,
        "attack_stepsize": 0.03,
        "random_start": true,
        "loss_func": "ce",
        "method_params": {"bounded_input": true, "bound_type": "interval"}
    },
    "models": [
        {
            "model_id": "cnn_2layer_width_4_AdvIBP",
            "model_class": "model_cnn_2layer_ibp",
            "model_params": {"in_ch": 1, "in_dim": 28, "width": 4, "linear_size": 100}
        },
        {
            "model_id": "cnn_2layer_width_4_AdvCROWN-IBP",
            "model_class": "model_cnn_2layer",
            "model_params": {"in_ch": 1, "in_dim": 28, "width": 4, "linear_size": 100}
        }
    ]
}

